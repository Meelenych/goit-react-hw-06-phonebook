{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["ContactForm","addContact","nameChange","phoneChange","type","onChange","name","pattern","title","required","onClick","ContactList","contacts","delContact","map","id","phoneNumber","className","Filter","filter","value","baseContacts","uuidv4","App","useState","setName","setPhoneNumber","setFilter","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","handleChange","e","target","filteredContact","normalizedFilter","toLowerCase","elem","includes","getFilteredElems","find","contact","alert","newContact","length","dataId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d08332dc.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ContactForm = ({ addContact, nameChange, phoneChange }) => {\n\treturn (\n\t\t<>\n\t\t\t<h1>Phonebook</h1>\n\t\t\t<form>\n\t\t\t\t<label>\n\t\t\t\t\tName\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={nameChange}\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\n\t\t\t\t<label>\n\t\t\t\t\tNumber\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\tonChange={phoneChange}\n\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\t\ttitle=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\n\t\t\t\t<button type=\"button\" onClick={addContact}>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\tAdd Contact\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</>\n\t);\n};\n\nexport default ContactForm;\n","import React from \"react\";\n\nconst ContactList = ({ contacts, delContact }) => {\n  //   console.log(contacts);\n  return (\n    <>\n      <h1>Contacts</h1>\n      <ul>\n        {contacts.map(({ id, name, phoneNumber }) => (\n          <li key={id}>\n            <p> {`${name}: ${phoneNumber}`}</p>\n\n            <button\n              id={id}\n              onClick={() => {\n                delContact(id);\n              }}\n              type=\"button\"\n              className=\"btn\"\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from \"react\";\n\nconst Filter = ({ filter, value }) => {\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input type=\"text\" onChange={filter} value={value} />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","import useLocalStorage from \"../src/hooks/useLocalStorage\";\nimport { useState } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\n\nconst baseContacts = [\n  { id: uuidv4(), name: \"Rosie Simpson\", phoneNumber: \"459-12-56\" },\n  { id: uuidv4(), name: \"Hermione Kline\", phoneNumber: \"443-89-12\" },\n  { id: uuidv4(), name: \"Eden Clements\", phoneNumber: \"645-17-79\" },\n  { id: uuidv4(), name: \"Annie Copeland\", phoneNumber: \"227-91-26\" },\n];\n\nexport default function App() {\n  const [name, setName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n\n  const [filter, setFilter] = useState(\"\");\n\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", [\n    ...baseContacts,\n  ]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setPhoneNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const addContact = (e) => {\n    if (\n      contacts.find((contact) => {\n        return contact.name === name;\n      })\n    ) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      const newContact = {\n        id: uuidv4(),\n        name,\n        phoneNumber,\n      };\n      setContacts([newContact, ...contacts]);\n    }\n  };\n\n  const getFilteredElems = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((elem) =>\n      elem.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContact = getFilteredElems();\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const delContact = (dataId) => {\n    setContacts((prevState) => prevState.filter(({ id }) => id !== dataId));\n  };\n\n  return (\n    <div className=\"container\">\n      <ContactForm\n        addContact={addContact}\n        nameChange={handleChange}\n        phoneChange={handleChange}\n      />\n\n      {contacts.length > 0 && (\n        <>\n          <Filter filter={handleFilterChange} value={filter} />\n          <ContactList contacts={filteredContact} delContact={delContact} />\n        </>\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}